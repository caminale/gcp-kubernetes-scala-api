apiVersion: v1
kind: Namespace
metadata:
  name: scala-api
---
apiVersion: apps/v1beta2 # for versions before 1.8.0 use apps/v1beta1
kind: Deployment
metadata:
  name: scala-api
  namespace: scala-api
  labels:
    app: scala-api
spec:
  selector:
    matchLabels:
      app: scala-api
  replicas: 2 # tells deployment to run 2 pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: scala-api
    spec:
      volumes:
      - name: google-cloud-key
        secret:
          secretName: scala-api-key
      containers:
      - name: scala-api
        image: camelotte/scala-api:V2
        imagePullPolicy: Always
        ports:
        - containerPort: 9000
        volumeMounts:
        - name: google-cloud-key
          mountPath: /var/secrets/google
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /var/secrets/google/key.json
        - name: DATABASE_URL
          value: "jdbc:postgresql://35.241.35.34:5222/octo?tcpKeepAlive=true?socketTimeout=0?sslmode=disable"
        - name: SPANNER_MAX_SESSIONS
          value: "500"
        - name: NBR_THREADS
          value: "100"
        - name: TYPE_DB
          value: "cockroach"
        - name:  NBR_CUSTOMERS
          value: "20000"
        - name:  NBR_PRODUCTS
          value: "20000"
        - name:  NBR_PRODUCTS_TO_ADD
          value: "1"
        - name:  NBR_STOCK
          value: "2000"
        - name:  PROJECT_ID
          value: "cockroach-gce"
        - name:  PATH_JSON_KEY
          value: "/var/secrets/google/key.json"
        - name: NBR_TOTAL_PRODUCTS
          value: "1600000"
        - name: NBR_RUN_BENCHMARK
          value: "1"
        - name: TIMEOUT
          value: "20"
---
apiVersion: v1
kind: Service
metadata:
  name: scala-service
  namespace: scala-api
  labels:
    app: scala-api
spec:
  type: LoadBalancer
  ports:
  - protocol: TCP
    port: 9000
    targetPort: 9000
  selector:
    app: scala-api
---


